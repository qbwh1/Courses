WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:02.603
في تركيبة الحلقة المتداخلة هذه،

00:00:02.703 --> 00:00:04.438
هذه الحلقة الأصغر التي في الداخل،

00:00:04.538 --> 00:00:07.941
عادة ما يشار إليها باسم الحلقة الداخلية.

00:00:08.041 --> 00:00:10.544
كل مرة تنتقل فيها هذه الحلقة الخارجية
إلى المستوى الداخلي الأدنى

00:00:10.644 --> 00:00:14.515
فإنها تُعيد عدّاد الحلقة الداخلية هذا للصفر،

00:00:14.615 --> 00:00:18.418
ما يفرض عليها طباعة
رسالة "!Hi" هذه ثلاث مرات،

00:00:18.519 --> 00:00:20.120
ما يعني أن هذه الحلقة الخارجية

00:00:20.220 --> 00:00:26.260
ستتسبب في طباعة هذه الرسالة ثلاث مرات
مراراً وتكراراً، ثلاث مرات متتالية.

00:00:26.360 --> 00:00:30.030
لهذا السبب ستتم طباعة هذه الرسالة
تسع مرات في المجمل.

00:00:30.130 --> 00:00:33.033
لكن لنقم بتتبع البرنامج خطوة بخطوة

00:00:33.133 --> 00:00:36.737
ونراقب التغير الحاصل على المتغيرين
"i" و"j" أثناء تقدمنا.

00:00:36.837 --> 00:00:40.107
بدءاً بالحلقة الخارجية، يتم تهيئة المتغير
"i" بإسناد صفر كقيمة أولية له،

00:00:40.207 --> 00:00:42.543
ما يجعل قيمته صفر.

00:00:42.643 --> 00:00:46.313
والأمر التالي الذي سيحدث هو أننا سنتفقد
ما إذا كانت "i" أقل من العدد ثلاثة.

00:00:46.413 --> 00:00:47.848
وهي كذلك في هذه الحالة،

00:00:47.948 --> 00:00:51.518
وعليه ندخل مستوى الحلقة الخارجية الأدنى
إلى هذه الحلقة الداخلية.

00:00:51.618 --> 00:00:55.389
ما سيحدث الآن هو أنه سيتم تهيئة "j"
بقيمة أولية هي صفر، فتصبح تلك قيمته،

00:00:55.489 --> 00:00:57.958
ثم نختبر ما إذا كانت "j" أقل من 3.

00:00:58.058 --> 00:01:01.395
وهي كذلك،
لذا ندخل مستوى الحلقة الداخلية الأدنى،

00:01:01.495 --> 00:01:02.963
ونطبع عبارة "Hi!".

00:01:03.063 --> 00:01:05.832
ثم نصل إلى نهاية حلقتنا الداخلية،

00:01:05.933 --> 00:01:10.337
فنعود للأعلى ونختبر الشرط
ونزيد "j" بمقدار واحد،

00:01:10.437 --> 00:01:13.173
لنغير قيمته من صفر إلى واحد.

00:01:13.273 --> 00:01:14.975
ثم بعد مجرد زيادة "j"

00:01:15.075 --> 00:01:17.110
نختبر ما إذا كانت ما تزال أقل من 3،

00:01:17.211 --> 00:01:18.679
وهي كذلك في هذه الحالة.

00:01:18.779 --> 00:01:22.683
لذا نعود إلى داخل الحلقة مجدداً
ونطبع "!Hi" أخرى.

00:01:22.783 --> 00:01:24.985
نصل إلى نهاية الحلقة الداخلية،

00:01:25.085 --> 00:01:28.789
فنعود للأعلى ونضيف واحداً أخر إلى "j".

00:01:28.889 --> 00:01:31.825
ثم نختبر ما إذا كانت "j"
ما تزال أقل من ثلاثة، وهي كذلك.

00:01:31.925 --> 00:01:36.263
فنعود إلى داخل الحلقة مجدداً
ونطبع "!Hi" مرة أخرى.

00:01:36.363 --> 00:01:38.332
وصلنا هذه المرة إلى نهاية الحلقة،

00:01:38.432 --> 00:01:40.367
فنعود للأعلى ونزيد بمقدار واحد،

00:01:40.467 --> 00:01:44.771
لتصبح القيمة هي 3. لذا، عند اختبارنا ما
إذا كانت "j" أقل من ثلاثة هذه المرة،

00:01:44.872 --> 00:01:46.473
نرى أنها ما عادت "true".

00:01:46.573 --> 00:01:51.945
لذا سيتم الانتقال مباشرة إلى نهاية
الحلقة الداخلية والمتابعة من هناك.

00:01:52.045 --> 00:01:54.348
وبما أنه ليس هنالك
أي شيء بعد الحلقة الداخلية،

00:01:54.448 --> 00:01:56.817
نصل إلى قوس الإغلاق للحلقة الخارجية،

00:01:56.917 --> 00:02:00.120
ما يعني أننا سنعود ونزيد "i" هذه المرة.

00:02:00.220 --> 00:02:02.656
تتغير "i" من صفر إلى واحد.

00:02:02.756 --> 00:02:06.894
لذا نتفحص ما إذا كانت "i" ما تزال
أقل من ثلاثة، وهي كذلك في هذه الحالة،

00:02:06.994 --> 00:02:09.863
ما يعني أننا سندخل مستوى الحلقة الأدنى.

00:02:09.963 --> 00:02:12.199
بما أننا الآن دخلنا مستوى الحلقة
الخارجية الأدنى،

00:02:12.299 --> 00:02:14.201
نرى الحلقة الداخلية من جديد.

00:02:14.301 --> 00:02:19.373
لذا نبدأ من البداية بما في ذلك خطوة
التهيئة، لتعود "j" إلى قيمة صفر.

00:02:19.473 --> 00:02:21.241
فنختبر ما إذا كانت "j" أقل من 3،

00:02:21.341 --> 00:02:24.244
وهي كذلك. ثم نبدأ بالطباعة مجدداً،

00:02:24.344 --> 00:02:26.113
لذا يتم طباعة "!Hi".

00:02:26.213 --> 00:02:28.916
ثم نصل إلى قوس الإغلاق للحلقة الداخلية،

00:02:29.016 --> 00:02:31.418
فنعود للأعلى ونزيد "j"،

00:02:31.518 --> 00:02:34.855
لتتحول القيمة من صفر إلى واحد،
ثم نتفقد ما إذا كانت أقل من 3.

00:02:34.955 --> 00:02:36.590
وهي كذلك. لذا نطبع "!Hi" مجدداً

00:02:36.690 --> 00:02:40.661
ثم ننهي الحلقة الداخلية مجدداً.

00:02:40.761 --> 00:02:42.296
نتراجع ونزيد "j" لتصبح اثنين،

00:02:42.396 --> 00:02:44.498
ثم نتفقد ما إذا كانت أقل من 3،

00:02:44.598 --> 00:02:46.233
وهي كذلك، لذا نطبع "!Hi" مجدداً،

00:02:46.333 --> 00:02:52.072
ثم نكرر هذا إلى حين أن نبلغ "++j"
ما يجعل قيمة "j" هي 3.

00:02:52.172 --> 00:02:54.007
لذا عندما نختبر
ما إذا كانت "j" أقل من 3،

00:02:54.107 --> 00:02:55.242
نجد أنها ليست كذلك في هذه الحالة،

00:02:55.342 --> 00:02:59.613
فلا نطبع شيئاً وننتقل
إلى قوس إغلاق الحلقة الداخلية.

00:02:59.713 --> 00:03:02.583
ثم نستمر ولا نجد شيئاً أخر لفعله،

00:03:02.683 --> 00:03:06.854
فنصل إلى قوس إغلاق الحلقة الخارجية.
لكن ما تزال "i" أقل من 3،

00:03:06.954 --> 00:03:08.088
لذا نعود للأعلى

00:03:08.188 --> 00:03:13.026
ونزيد "i" لتصبح اثنان
ونتفقد ما إذا كانت "i" أقل من ثلاثة أم لا.

00:03:13.126 --> 00:03:14.561
وهي كذلك في هذه الحالة،

00:03:14.661 --> 00:03:16.597
لذا ندخل إلى مستوى حلقتنا الداخلية مجدداً،

00:03:16.697 --> 00:03:19.700
ونهيئ "j" بصفر كقيمة أولية مجدداً.

00:03:19.800 --> 00:03:21.935
ولأن الصفر أقل من ثلاثة،

00:03:22.035 --> 00:03:23.871
نبدأ بالطباعة من جديد.

00:03:23.971 --> 00:03:27.040
وسيجبر هذا حلقتنا الداخلية على تكرار

00:03:27.140 --> 00:03:32.346
دورتها الطبيعية مرة تلو الأخرى
وطباعة "!Hi" ثلاث مرات.

00:03:32.446 --> 00:03:35.516
عند وصول الحلقة الخارجية لقيمة ثلاثة،

00:03:35.616 --> 00:03:38.785
ستصبح نتيجة تقييم هذا الشرط "false".
فننتقل إلى النهاية

00:03:38.886 --> 00:03:41.321
ونصل إلى أقواس إغلاق الحلقة الخارجية،

00:03:41.421 --> 00:03:44.925
ونعود ونزيد "i"
لتصبح قيمتها ثلاثة هذه المرة،

00:03:45.025 --> 00:03:46.860
والتي ما عادت أقل من ثلاثة،

00:03:46.960 --> 00:03:49.630
وعليه فإنها لن تدخل مستوى الحلقة
الداخلية حتى بعد الآن،

00:03:49.730 --> 00:03:54.601
وستنتقل ببساطة إلى قوسي إغلاق
الحلقة الخارجية، وينتهي البرنامج.

00:03:54.701 --> 00:03:59.506
لاحظ أن قيمة "i" تغيرت من صفر إلى ثلاثة،
ولكل قيمة من قيم "i"،

00:03:59.606 --> 00:04:01.275
تغيرت "j" من صفر إلى 3.

00:04:01.375 --> 00:04:03.210
هذه هي فكرة الحلقات المتداخلة،

00:04:03.310 --> 00:04:08.482
حيث يمكنك استخدام "i" و"j" بشكل متبادل
في الحلقة الداخلية في العديد من الحالات.

00:04:08.582 --> 00:04:10.884
لنرى كيف يمكننا استخدام الحلقات المتداخلة

00:04:10.984 --> 00:04:13.654
للتنقل عبر خانات مصفوفة ثنائية
الأبعاد على سبيل المثال.

00:04:13.754 --> 00:04:16.990
دعونا نعود إلى شبكتنا ثنائية الأبعاد،

00:04:17.090 --> 00:04:22.763
حيث نريد معرفية كيفية التنقل مروراً بجميع
الأعداد في هذه المصفوفة ثنائية الأبعاد.

00:04:22.863 --> 00:04:26.900
نحن نعلم بالفعل أننا إذا أردنا المرور
بكل عنصر من عناصر صف واحد،

00:04:27.000 --> 00:04:29.603
يمكننا ببساطة كتابة حلقة للقيام بذلك.

00:04:29.703 --> 00:04:31.004
هذه الحلقة مثلاً

00:04:31.104 --> 00:04:35.776
ستمر بكل عنصر من عناصر
الصف ذي مؤشر الفهرسة صفر،

00:04:35.876 --> 00:04:40.380
ما يعني أنها ستقوم بعد كل هذه الأرقام،
وبما أنها تضيفها إلى لمجموع

00:04:40.480 --> 00:04:42.282
فمع بلوغ نهاية هذه الحلقة،

00:04:42.382 --> 00:04:46.920
فستكون قيمة المجموع "total"
مساوية لمجموع العناصر في ذاك الصف.

00:04:47.020 --> 00:04:49.223
إن أردنا إضافة الصفوف الأخرى كلها،

00:04:49.323 --> 00:04:52.492
يمكننا ببساطة كتابة حلقة لكل صف.

00:04:52.593 --> 00:04:55.329
الفرق الوحيد هو مؤشر الفهرسة هنا،

00:04:55.429 --> 00:04:58.765
حيث يجب أن يطابق مؤشر فهرسة
الصف الذي يهمنا.

00:04:58.866 --> 00:05:03.103
لذا عند تنفيذنا هذا الكود،
فإنه سيمر بكل صف

00:05:03.203 --> 00:05:09.977
ومن ثم كل عنصر في ذاك الصف ويجمع العناصر
حتى نحصل على قيمة المجموع التي نريدها.

00:05:10.077 --> 00:05:15.048
لاحظ أن جميع هذه الحلقات
متطابقة تقريباً فيما عدا مؤشر الفهرسة،

00:05:15.148 --> 00:05:18.018
الذي يتغير من صفر إلى ثلاثة.

00:05:18.118 --> 00:05:20.587
يبدو هذا كشيء
يمكننا استخدام حلقة للقيام به،

00:05:20.687 --> 00:05:23.357
إن أحطنا إحدى تلك الحلقات بحلقة أخرى،

00:05:23.457 --> 00:05:26.293
واستخدمنا عدادها بدلاً من مؤشر الفهرسة هذا،

00:05:26.393 --> 00:05:29.296
فإن ذلك سيؤدي الغرض ذاته
الذي يؤديه هذا الكود.

00:05:29.396 --> 00:05:32.933
لذا إن استبدلنا هذا الكود بشيء يبدو كهذا،

00:05:33.033 --> 00:05:35.936
حيث لدينا تركيبة حلقتين متداخلتين،

00:05:36.036 --> 00:05:41.441
إحداهما تستخدم العداد "i"،
والأخرى تستخدم العداد "j".

00:05:41.542 --> 00:05:45.345
وإذا حاولنا الوصول إلى "grades[i][j]"،

00:05:45.445 --> 00:05:49.249
فسيجمع هذا في النهاية
جميع عناصر المصفوفة ثنائية الأبعاد.

00:05:49.349 --> 00:05:53.387
إذن فإنه بتنفيذ هذا الكود، ستمر الحلقة
الداخلية بكل عنصر من عناصر صف ما،

00:05:53.487 --> 00:05:55.856
ثم ستتأكد الحلقة الخارجية
من انتقالنا إلى الصف الثاني.

00:05:57.324 --> 00:05:59.993
ثم ستمر الحلقة الداخلية
بكل عنصر في داخلها مجدداً،

00:06:00.093 --> 00:06:03.030
وبتلك الطريقة يمكننا
ضمان أنه مع بلوغنا نهاية الكود

00:06:03.130 --> 00:06:06.233
سنكون قد مررنا بكل عنصر في الشبكة.

00:06:06.333 --> 00:06:10.003
ولأننا في كل مرة نقوم
بإضافة العلامات إلى المتغير "total"،

00:06:10.103 --> 00:06:12.573
مع بلوغ نهاية هذه الحلقة المتداخلة

00:06:12.673 --> 00:06:18.278
سيكون المجموع "total" يضم حاصل جمع
كل الأرقام في هذه المصفوفة ثنائية الأبعاد.

00:06:18.378 --> 00:06:21.248
ممتاز. يمكنك القيام بما هو أكثر بكثير
من مجرد إضافة الأرقام.

00:06:21.348 --> 00:06:24.284
يمكنك مثلاً محاولة إيجاد أدنى رقم وأعلى رقم

00:06:24.384 --> 00:06:27.988
في مصفوفة ثنائية الأبعاد
باستخدام حلقة متداخلة.

